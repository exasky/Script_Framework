#!/bin/bash
################################################################################
#   Welcome in the tools part of this framework
#       This file contains all tools functions of the framework
#       e.g.: A tool to generate a new file with all basics functions           
#
#   Author:     SIMAR Jeremy
#   Version:    0.1
#
#   Change log:
#       V0.1 : Initial
#
################################################################################

FW_PATH=$(cd "$(dirname "$0")" && pwd -P)
FW_PATH="${FW_PATH%/*}/scriptFramework.sh"
. $FW_PATH

usage() {
    printf ${Blue}"Usage: `basename "$0"` [ --generate-skeleton <file> ]\n"
    printf ${Blue}"\t-h\t\t\t\t:${BBlue} Print this help message\n"
    printf ${Blue}"\t-g | --generate-skeleton <file> :${BBlue} Generate a file containing default functions\n"
    printf ${NC}
}

declare_env() {
    generate_skeleton_file=""
}

check_env() {
    while [ -n "$1" ]; do
        case "$1" in
            --help | -h)
                exit_with_usage 0 ;;
            --generate-skeleton | -g)
                shift
                generate_skeleton_file=$1 ;;
            *)
              exit_with_usage 1 ;;
        esac
        shift;
    done

}

echo_function_in_file() {
    echo -e "$1() {" >> $2
    echo >> $2
    echo -e "}" >> $2
    echo >> $2
}

generate_skeleton() {
    local output_file="$1"
    [[ -e $output_file ]] && rm $output_file
    touch $output_file
    chmod 755 $output_file
    
    echo -e "#!/bin/bash" >> $output_file
    echo -e "###############################################" >> $output_file
    echo -e "#    GENERATED BY scriptFramework_tools.sh    #" >> $output_file
    echo -e "###############################################\n" >> $output_file
    
    echo -e ". \"$FW_PATH\"" >> $output_file
    echo >> $output_file
    
    echo_function_in_file "usage" $output_file
    echo_function_in_file "declare_env" $output_file
    echo_function_in_file "check_env" $output_file
    
    echo -e "#####################################" >> $output_file
    echo -e "#    DECLARE YOUR FUNCTIONS HERE    #" >> $output_file
    echo -e "#####################################" >> $output_file
    echo -e "\n\n" >> $output_file
    echo -e "#####################################\n" >> $output_file
    
    echo_function_in_file "main" $output_file
}

main() {
    [ ! -z $generate_skeleton_file ] && generate_skeleton $generate_skeleton_file
}
